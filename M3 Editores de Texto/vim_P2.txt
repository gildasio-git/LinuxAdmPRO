

Comandos do vim:


Comandos úteis no modo de inserção:

Ctrl+y    - Repete, caracter por caracter, a linha acima a do cursor
Ctrl+e    - Repete, caracter por caracter, a linha abaixo da do cursor
Ctrl+w    - Apaga (na linha) a última palavra digitada anterior ao cursor
Ctrl+u    - Apaga (na linha) da posição do cursor até o início da linha
Ctrl+t    - Indenta linha atual
Ctrl+d    - Desidenta linha atual

Comando do modo de comandos

j        - Movimenta o cursor para baixo
k        - Movimenta o cursor para cima
l        - Movimenta o cursor para direita
h        - Movimenta o cursor para esquerda
f[]        - Pressione f seguido de algum caractere para posicionar o cursor na próxima ocorrência desse caractere
t[]        - A mesma coisa para o t, mas posiciona um caractere antes do caractere pressionado

D        - Apaga da posição atual até o fim da linha
J        - Junta duas linhas (não importa a posição do cursor, 5J irá juntar cinco linhas contíguas)
dd        - Apaga toda a linha
d3d        - Apaga a linha atual e mais duas
dj        - Apaga 2 linhas abaixo
dk        - Apaga 2 linhas acima
dw        - Apaga até o fim da palavra
dt"        - Apaga da posição atual até o fechamento das aspas
5db        - Apaga cinco palavras para trás do cursor

Ctrl+u    - Desfazer (o limite do buffer de memória)
Ctrl+r    - Refazer

yy ou Y    - Copia a linha
yw        - Copia a próxima palavra
y3w        - Copia as próximas 3 palavras
y10j        - Copia mais 10 linhas abaixo
y10k    - Copia mais 10 linhas acima

P        - Cola após o cursor
p        - Cola na posicão do cursor
3P        - Cola 3 vezes após o cursor

:w        - Salva as alterações
:w!        - Força salvar as alterações
:w file    - Salva as alterações no arquivo especificado
:q        - Sai do Vim 'quit'
:q!        - Força a saída sem salvar as alterações
:wq ou ZZ- Salva as alterações e sai
:wq!        - Força salvar as alterações e sair

^^        - Volta ao começo da linha
$        - Vai até o final da linha
w        - Avança até a próxima palavra
e        - Avança até o fim da palavra atual
b        - Retorna ao início da palavra
gg        - Retorna à primeira linha
G        - Vai até a última linha
:numero    - Vai até a linha especificada

/string    - Pesquisar uma string no texto, aceita expressões regulares
n        - Localiza a próxima ocorrência da string
N        - Localiza a ocorrência anterior da string

:s/REGEX/string    - Substituição aceita expressões regulares
:s/old/new/        - Substitui a primeira ocorrência da string old por new na linha atual,
:s/old/new/g        - Substitui a todas as ocorrências da string old por new na linha atual,
:%s/old/new/        - Substitui a primeira ocorrência da string old por new em todo o arquivo
:%s/old/new/g        - Substitui todas as ocorrências da string old por new em todo o arquivo
:%s/old/new/gc    - Substitui todas as ocorrências da string old por new em todo o arquivo mas pede confirmação antes de alterar
:3,20 s/old/new/g    - Substitui todas as ocorrências da string old por new das linhas 3 até linha 20

Comandos diversos:
:split    - Divide a tela horizontalmente
:vsplit    - Divide a tela verticalmente
Ctrl+w    - Move para a proxima janela
Ctrl+w    - Somado as teclas de movimento anda para a janela da direção da tecla (hjkl)
Ctrl+wr    - Rotaciona as janelas
Ctrl+wq    - Fecha a janela atual
Ctrl+wo    - Fecha todas as outra janelas, menos a atual
:wall    - Salva todas as alterações em todas as janelas
:qall        - Fecha todas as janelas

:Vex        - Abre o Vertical File Explorer
:ex        - Abre o File Explorer

:!comando    - Executa um comando e mostra o resultado na tela (só mostra)
:.!comando    - Executa o comando e cola o resultado substituindo a linha atual

:sort         - Ordena o arquivo
:sort n        - Ordena considerando o valor relativo dos números


Comandos úteis no modo visual:

v        - Entra no modo visual
V        - Entra no modo modo visual selecionando a linha inteira
Ctrl+V    - modo visual em colunas
v$        - modo visual selecionando a linha inteira
v%        - Estando com o cursor em cima de um delimitador, "{}[]()", inicia o modo visual e seleciona tudo que           estiver entre dois delimitadores, eles inclusive
vib        - Estando entre dois delimitadores em uma posição qualquer, "{}[]()", inicia o modo visual e seleciona o               conteudo entre dois delimitadores
vi"        - Inicia o modo visual e seleciona o conteudo entre duas " "
vi'        - Inicia o modo visual e seleciona o conteudo entre duas ' '
vu        - Torna minúsculo o caracter/seleção
vU        - Torna maiúsculo o caracter/seleção
vwu        - Marca a palavra e utiliza o comando u para deixá-la em minúsculo
vwU        - A mesma coisa para deixá-la em maiúsculo
ggVG    - Volta até o início do arquivo (gg), inicia o Modo Visual de Linhas  (V) e seleciona até o final do arquivo (G)
Ctrl+d    - seleciona o bloco abaixo do cursor
Ctrl+e    - seleciona o bloco acima do cursor


Folders no Vim:
Modos:
    - syntax
    - indent
    - manual
      
zo        - Abre um folder
zR        - Abre todas os folders do arquivo atual
zc        - Fecha um folder
zfap        - Cria um folder para o parágrafo 'ap' atual
zd         - Apaga o folder (não o seu conteúdo)
zf/casa    - Cria um folder até a palavra casa
zj        - Desce até o próximo folder
zk        - Sobe até o folder anterior
zi        - Desabilita ou habilita os folders    
    
Comando do vim para salvar automaticamente edições de visualização ao salvar
autocmd BufWinLeave *.* mkview

Comando do vim para ler automaticamente edições de visualização ao abrir
autocmd BufWinEnter *.* silent loadview

Usar a barra de espaço para abrir/fechar um folder
nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')v<CR>



Corretor ortografico no VIM:

Entre no /tmp
# cd /tmp

Baixe no site https://pt-br.libreoffice.org/projetos/vero/

Versão 3.2
# wget https://pt-br.libreoffice.org/assets/Uploads/PT-BR...


Descompacte o arquivo
# unzip VeroptBRV320AOC.oxt

Abra o vim
# vim

Digite para compilar o dicionario para o vim
# :mkspell pt pt_BR

Crie o diretório do spell para seu usuario
# mkdir ~/.vim/spell

Copie o arquivo gerado para seu diretório do spell
# cp pt.utf-8.spl ~/.vim/spell

No arquivo de configuração do vim (~/.vimrc) digite no final
set spell speelllang=pt

Todas as palavras que o vim achar que precisam de correção estarão grifadas



O arquivo de configuraçãodo VIM em Red Hat e derivados é:

Global: /etc/vimrc

Local : ~/.vimrc

O arquivo de configuraçãodo VIM em Debian e derivados é:

Global: /etc/vim/vimrc

Local : ~/.vimrc

Arquivo vimrc:

" Opções Básicas de Edição do Vim
runtime! debian.vim     " Executa o script para programas que usam o Vim em distros Debian Like
syntax on        " Habilita o recurso de Syntaxe para identificar conteudo nos arquivos
set showcmd        " Mostra (parcialmente) o status dos comandos
set showmatch        " Mostra o fechamento de { ( [ .
set ignorecase        " Faz o Vim tratar maiúsculas e minúsculas sem diferença (case insensitive)
set smartcase        " Faz busca inteligente
set incsearch        " Faz busca incremental
set autowrite        " Salva automaticamente antes de comandos como :next e :make
set nomodeline        " Desabilita o uso de Modelines (evita ataques de execução de comandos)
set modelines=0        " Mesmo que modelines estejam habilitados ele executa 0 linhas (parse 0)
set ruler        " habilita a régua (mostrar linha e coluna no canto inferior direito)
set bg=dark        " Coloca o fundo (background) escuro, melhora o uso do vim no modo gráfico por exemplo.
set number        " habilita a numeração das linhas
set hls            " Grifa o resultado da busca
set wildmode=longest,list " Para completar com TAB igualzinho o bash faz (Use CTRL+P para completar)
set hlg=pt        " Idioma preferido para buscar ajuda
set ul=500        " máximo de mudanças que podem ser desfeitas
set ai            " Habilita a autoindentação
" F2 Para 'ocultar' e F3 voltar os comentarios do arquivo atual
noremap <F2> :hi Comment ctermfg=black guifg=black<cr>
noremap <F3> :hi Comment term=bold ctermfg=cyan guifg=cyan<cr>
" Alterna entre janelas sem sair do modo insercao (depois do :split)
map <F4> <esc><c-w><c-w>
" Aperte F5 e a tela fica embaralhada e F5 para voltar ao normal"
map <F5> ggVGg?
" Procura a primeira linha vazia e comeca a editar
map <F6> gg/^$<cr>i#
" Remove espaços redundantes no fim das linhas com F7
map <F7> <esc>mz:%s/\s\+$//g<cr>`z
" Retira os ^M que ficam no final de arquivos salvos pelo windows. Aperte F8 e suma com eles.
map <F8> :%s/\r//g
" Cria o cabecalho padrao para shell script
map <F9>  ggO#!/bin/bash
          \<c-o>:r!echo %<cr># <c-o>o
          \# Versao: <c-o>o
          \# Script para:<c-o>i
          \<c-o>:r!date '+\%Y-\%m-\%d \%H:\%M-0300'<cr># <c-o>o
          \# Codificacao utf-8<c-o>o
          \# Autor: Vagner Fonseca<cr>
" Com o cursor encima de alguma funcao PHP e aperte o F10 e ele vai buscar no site do php.net a definição para ela.
"map "vyiw:new:execute "r!lynx --dump http://br.php.net/manual/en/function.".@v.".php":s... nonu:1
" Abreviações para quando a tecla CAPS LOCK estiver ativada."
cab W w | cab Q q | cab Wq wq | cab wQ wq | cab WQ wq
" Função que fecha automaticamente { ( [, ao escrevê-los o vim fecha automaticamente.
imap { {}<left>
imap ( ()<left>
imap [ []<left>
" Salva os arquivos .sh com permissao de escrita
au BufWritePost *.sh  !chmod +x %
" Busca colorida em verde
hi    Search ctermbg=green ctermfg=black
hi IncSearch ctermbg=black ctermfg=cyan
" Ruler e cursor sempre em branco
hi StatusLine ctermfg=white
" Faz os resultados da busca aparecerem no meio da tela
nmap n nzz
nmap N Nzz
nmap * *zz
nmap # #zz
nmap g* g*zz
nmap g# g#zz
"Arquivos .sh sao sempre bash, e não sh
au FileType sh let b:is_bash=1
" Palavras-chave para destacar em qualquer tipo de arquivo
syn case ignore
syn keyword p_c vagner fonseca
syn keyword p_c Vagner Fonseca
hi p_c ctermbg=white ctermfg=black
" Mail: Configuracoes especiais para arquivos de email
au FileType Mail set fo=ctq tw=65 et
" Man: Paginas de manual sao na verdade textos em NROFF
au BufNewFile,BufRead *.man set ft=nroff
" TXT: Arquivos texto tem tratamento especial
au BufNewFile,BufRead *.txt   set tw=75 ts=8 ft=txt "spell
au BufNewFile,BufRead *README,*NEWS,*TODO set ft=txt "spell
" Python: TAB colorido e outras configuracoes
au FileType python set ts=8 tw=80 noet
au FileType python syn match pythonTAB '\t\+'
au FileType python hi pythonTAB ctermbg=blue
"au FileType python set list listchars=tab:··
au FileType python hi pythonString ctermfg=lightgreen
au FileType python hi pythonRawString ctermfg=lightgreen
" Habilita correcao ortografica para portugues
" set spell spelllang=pt

" Comando do vim para salvar automaticamente edições de visualização ao salvar
autocmd BufWinLeave *.* mkview
" Comando do vim para ler automaticamente edições de visualização ao abrir
autocmd BufWinEnter *.* silent loadview
" Remapear o / para abrir e fechar folder
nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>


